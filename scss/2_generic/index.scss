@charset 'UTF-8';

html {
  box-sizing: border-box;
  background-repeat: no-repeat;
  text-size-adjust: 100%;
  overflow-wrap: break-word;
  word-break: normal;
  line-height: 1.4;
  tab-size: 4;
  font-family: -apple-system, "Segoe UI", Roboto, system-ui, sans-serif;
  cursor: default;
  --fs-base: clamp(var(--fs-min), calc(1vmin + 1vmax), var(--fs-max));
}

html:focus-within {
  scroll-behavior: smooth;
}

*, *::before, *::after {
  box-sizing: inherit;
}

html, body, p, ol, ul, li, dl, dt, dd, blockquote, figure, fieldset, 
legend, textarea, pre, iframe, hr, h1, h2, h3, h4, h5, h6 {
    margin: 0;
    padding: 0;
}

body {
  min-height: 95vh;
  margin: 0 auto;
  text-rendering: optimizeSpeed;
  font-size: var(--fs-base);
}

article, aside, details, dialog, div, figcaption, figure, 
footer, header, hgroup, main, menu, nav, section {
	display: block;
}

:where(h1, h2, h3, h4, h5, h6) {
  font-size: 100%;
  font-weight: normal;
}

h1 {
  font-size: var(--fs-1);
  margin: 0.67em 0;
}

h2 { font-size: var(--fs-2); }
h3 { font-size: var(--fs-3); }
h4 { font-size: var(--fs-4); }
h5 { font-size: var(--fs-5); }
h6 { font-size: var(--fs-6); }

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
  color: inherit;
}

br + br {
  display: none;
}

summary {
  display: list-item;
}

:where(nav) :where(ol, ul) {
  list-style: none;
}

:where(audio, canvas, embed, iframe, img, object, picture, svg, video) {
  display: inline-block;
  vertical-align: middle;
  height: auto;
  max-width: 100%;
  border: none;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

img:not([alt]) { filter: blur(5px); }

:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
  border-spacing: 0;
  text-indent: 0;
}

code, kbd, samp, pre {
  font-family: Consolas, monospace;
  font-size: 1em;
}

abbr[title] {
  border-bottom: none;
  text-decoration: underline dotted;
}

:where(b, strong) {
  font-weight: bolder;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 0.7em;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

:where(fieldset) {
  padding: 0.35em 0.75em 0.625em;
  border: 1px solid inherit;
}

legend {
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal;
  color: inherit;
}

:where(progress) {
  display: inline-block;
  vertical-align: baseline;
}

:where(textarea) {
  overflow: auto;
  vertical-align: top;
  margin: 0;
  resize: vertical;
}

:where(button, [type="button" i], [type="reset" i], [type="submit" i]) {
   -webkit-appearance: button;
}

:where(button, input, optgroup, select, textarea) {
  font-family: inherit;
	font-size: 100%;
	line-height: 1.15;
  margin: 0;
}

optgroup {
  font-weight: bold;
}

:where(button, select) {
  text-transform: none;
}

::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

:-moz-ui-invalid {
  box-shadow: none;
}

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

:where([type="search" i]) {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.5;
}

::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

:where(dialog) {
  background-color: inherit;
  border: solid;
  color: inherit;
  height: fit-content;
  left: 0;
  margin: auto;
  padding: 1em;
  position: absolute;
  right: 0;
  width: fit-content;
}

:where(dialog:not([open])) {
  display: none;
}

[aria-controls] {
  cursor: pointer;
}

:where([aria-busy="true" i]) {
  cursor: progress;
}

:where([aria-disabled="true" i], [disabled]) {
  cursor: not-allowed;
}

[hidden], [aria-hidden="true"] { 
  display: none; 
}

:where([aria-hidden="false" i][hidden]) {
  display: initial;
}

:where([aria-hidden="false" i][hidden]:not(:focus)) {
  clip: rect(0, 0, 0, 0);
  position: absolute;
}
