@charset "UTF-8";

@supports(display: grid) {

    .grid { 
        display: grid;
        margin: auto;
        grid-auto-rows: var(--grid-auto-row, 1fr);
        grid-auto-columns: var(--grid-auto-col, 1fr);
        gap: var(--grid-gap);
        justify-content: center;
        justify-items: stretch;
    }
    
    .grid.inline { display: inline-grid; }
	.dense { grid-auto-flow: dense; }
    .row { grid-auto-flow: column; }
    .col { grid-auto-flow: row; }
	.col.dense { grid-auto-flow: column dense; }
    .row.dense { grid-auto-flow: row dense; }
    
	// auto-fill != auto-fit != min-content != max-content != auto != minmax(a, b) 
    .responsive-col { 
        grid-template-columns: 
            repeat(
                auto-fit, 
                minmax(
                    var(--grid-item-min-width, 100px), 
                    var(--grid-item-max-width, 1fr)
                )
            ); 
    }
    .responsive-row {
        grid-template-rows: 
            repeat(
                auto-fit, 
                minmax(
                    var(--grid-item-min-width, 100px), 
                    var(--grid-item-max-width, 1fr)
                )
            ); 
    }
	
	$row-col: (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);
	@each $key in $row-col {
		.max-col-#{$key} { grid-template-columns: repeat($key, 1fr); }
    }
    @each $key in $row-col {
		.max-row-#{$key} { grid-template-rows: repeat($key, 1fr); }
    }
    @each $key in $row-col {
		.col-#{$key} { grid-column-end: span $key; }
    }
    @each $key in $row-col {
		.row-#{$key} { grid-row-end: span $key; }
    }	

}